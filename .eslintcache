[{"S:\\projects\\ReactJS\\junior\\src\\index.js":"1","S:\\projects\\ReactJS\\junior\\src\\App.js":"2","S:\\projects\\ReactJS\\junior\\src\\reportWebVitals.js":"3","S:\\projects\\ReactJS\\junior\\src\\component\\header.jsx":"4","S:\\projects\\ReactJS\\junior\\src\\component\\table.jsx":"5","S:\\projects\\ReactJS\\junior\\src\\component\\statusBoard.jsx":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":3825,"mtime":1609645093791,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":1802,"mtime":1609606438913,"results":"11","hashOfConfig":"8"},{"size":1672,"mtime":1609645859061,"results":"12","hashOfConfig":"8"},{"size":761,"mtime":1609644781513,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"ne2zru",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"16"},"S:\\projects\\ReactJS\\junior\\src\\index.js",[],["31","32"],"S:\\projects\\ReactJS\\junior\\src\\App.js",["33"],"import './App.css';\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport  Header from './component/header';\nimport TableView from './component/table'; \nimport StatusBoard from './component/statusBoard';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      dataArray : [],\n      dumyArray: [],\n      status: {\n        DEL: 0,\n        INT: 0,\n        OOD: 0,\n        DEX: 0,\n        NFI: 0\n      },\n      selected: \"DEL\"\n     }\n  }\n\n  handleEvent = (data) => {\n    console.log(data)\n    let selectedList  = this.state.dataArray.filter((st) => st.current_status_code === data.element)\n    this.setState({dumyArray: selectedList})\n  }\n  style = {}\n\n\n  render() { \n\n    \n    return (\n    <div>\n      <Header />\n      <div className=\"row\">\n        <div className=\"col-12\">\n            {/* {  Object.entries(this.state.status).forEach(([key, Value]) => <li>wor</li> )} */}\n            <StatusBoard clickHandle={this.handleEvent} statusList={this.state.status}/> \n\n\n\n        </div>\n\n        <div className=\"col-4\">\n          <div className=\"card\">\n\n          </div>\n        </div>\n        <div className=\"col-4\">\n          <div>\n           \n              <TableView key='1' dummy={this.state.dumyArray}/>\n\n\n          </div>\n        </div>\n      </div>\n    </div> );\n  }\n\n  componentDidMount() {\n    // POST request using fetch with error handling\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json', 'Authorization': \"Bearer tTU3gFVUdP\" },\n        body: JSON.stringify({ \t\"email\": \"suyashshrivastava651@gmail.com\"})\n    };\n    fetch('https://f0ztti2nsk.execute-api.ap-south-1.amazonaws.com/v1/consignment/fetch', requestOptions)\n        .then(async response => {\n            const data = await response.json();\n\n            // check for error response\n            if (!response.ok) {\n                // get error message from body or default to response status\n                const error = (data && data.message) || response.status;\n                return Promise.reject(error);\n            }\n\n            data.map((st) => {\n              if(st.current_status_code === \"DEL\") {\n                const newState = {...this.state.status, DEL: this.state.status.DEL + 1}\n                this.setState({status: newState})\n                // console.log(st)\n\n              } else if(st.current_status_code === \"INT\") {\n                // this.setState({DEL: this.state.status.DEL+1})\n                const newState = {...this.state.status, INT: this.state.status.INT + 1}\n                this.setState({status: newState})\n\n              } else if(st.current_status_code === \"OOD\") {\n                // this.setState({DEL: this.state.status.DEL+1})\n                const newState = {...this.state.status, OOD: this.state.status.OOD + 1}\n                this.setState({status: newState})\n\n              } else if(st.current_status_code === \"DEX\") {\n                const newState = {...this.state.status, DEX: this.state.status.DEX + 1}\n                this.setState({status: newState})\n\n              } else if(st.current_status_code === \"NFI\") {\n                const newState = {...this.state.status, NFI: this.state.status.NFI + 1}\n                this.setState({status: newState})\n\n              } \n            })\n\n            let selectedList  = data.filter((st) => st.current_status_code === this.state.selected)\n            this.setState({dumyArray: selectedList})\n            this.setState({ dataArray: data })\n            // console.log(data)\n        console.log(this.state.status)\n\n        })\n        .catch(error => {\n            this.setState({ errorMessage: error.toString() });\n            console.error('There was an error!', error);\n        });\n\n      }\n}\n \n\nexport default App;\n","S:\\projects\\ReactJS\\junior\\src\\reportWebVitals.js",[],"S:\\projects\\ReactJS\\junior\\src\\component\\header.jsx",["34","35"],"import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        return ( \r\n        <React.Fragment>\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <a className=\"navbar-brand\">Navbar</a>\r\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span className=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n  <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    <ul className=\"navbar-nav mr-auto\">\r\n      <li className=\"nav-item active\">\r\n        {/* <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a> */}\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <a className=\"nav-link\" href=\"#\">Link</a>\r\n      </li>\r\n      <li className=\"nav-item dropdown\">\r\n        {/* <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n          Dropdown\r\n        </a> */}\r\n        <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n          {/* <a className=\"dropdown-item\" href=\"#\">Action</a>\r\n          <a className=\"dropdown-item\" href=\"#\">Another action</a>\r\n          <div className=\"dropdown-divider\"></div>\r\n          <a className=\"dropdown-item\" href=\"#\">Something else here</a> */}\r\n        </div>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        {/* <a className=\"nav-link disabled\" href=\"#\">Disabled</a> */}\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</nav>\r\n        </React.Fragment> );\r\n    }\r\n}\r\n \r\nexport default Header ;","S:\\projects\\ReactJS\\junior\\src\\component\\table.jsx",["36"],"import React, { Component } from 'react';\r\n\r\n \r\n\r\nclass TableView extends Component {\r\n    constructor() {\r\n        super()\r\n    }\r\n\r\n    state = {  }\r\n    render() { \r\n        console.log(this.props.dummy)\r\n        return ( \r\n            <React.Fragment>\r\n            <table className=\"table\">\r\n             <thead className=\"thead-dark\">\r\n               <tr>\r\n                 <th scope=\"col\">#</th>\r\n                 <th scope=\"col\">Awbno</th>\r\n                 <th scope=\"col\">Carrier</th>\r\n                 <th scope=\"col\">Source</th>\r\n                 <th scope=\"col\">Destination</th>\r\n                 <th scope=\"col\">Start Date</th>\r\n                 <th scope=\"col\">ETD</th>\r\n                 <th scope=\"col\">Status</th>\r\n\r\n               </tr>\r\n             </thead>\r\n             <tbody>\r\n                 {this.props.dummy.map((list,index) => \r\n                 <tr>\r\n                     <th scope=\"row\">{index+1}</th>\r\n                     <td>{list.awbno}</td>\r\n                     <td>{list.carrier}</td>\r\n                     <td>{list.from ? list.from: \"\"}</td>\r\n                     <td>{list.to ? list.to: \"\"}</td>\r\n                     <td>{list.pickup_date}</td>\r\n                     <td>{list.extra_fields? list.extra_fields.expected_delivery_date: \"\"}</td>\r\n                     <td className={list.current_status_code==='DEL' ? 'btn btn-success' : 'btn btn-warning'} >{list.current_status_code==='DEL'?'DELIVERD':\"In-TRANSIT\"}</td>\r\n                 </tr>\r\n                         )\r\n                 }\r\n               \r\n             </tbody>\r\n           </table>\r\n\r\n       </React.Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default TableView;","S:\\projects\\ReactJS\\junior\\src\\component\\statusBoard.jsx",["37"],"const StatusBoard = (props) => {\r\n    // console.log(props.statusList)\r\n    Object.keys(props.statusList).map(element => { console.log(element)})\r\n    return (     \r\n        <div className=\"d-flex p-2 justify-content-center\">\r\n\r\n        \r\n            {\r\n                Object.keys(props.statusList).map((element) => {\r\n                return (\r\n                    <div className=\"card\" style={{ width:'15rem'}}>\r\n                <div className=\"card-body\" onClick={() => props.clickHandle({element})}>\r\n                    <h5 className=\"card-title\">{element}</h5>\r\n                    <p className=\"card-text\"></p>\r\n                  </div>\r\n                  </div>)\r\n                })\r\n            }\r\n\r\n        </div> );\r\n}\r\n \r\nexport default StatusBoard;",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":85,"column":27,"nodeType":"44","messageId":"45","endLine":85,"endColumn":29},{"ruleId":"46","severity":1,"message":"47","line":12,"column":3,"nodeType":"48","endLine":12,"endColumn":31},{"ruleId":"46","severity":1,"message":"49","line":23,"column":9,"nodeType":"48","endLine":23,"endColumn":42},{"ruleId":"50","severity":1,"message":"51","line":6,"column":5,"nodeType":"52","messageId":"53","endLine":8,"endColumn":6},{"ruleId":"42","severity":1,"message":"43","line":3,"column":47,"nodeType":"44","messageId":"45","endLine":3,"endColumn":49},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]