{"version":3,"sources":["component/header.jsx","component/table.jsx","component/statusBoard.jsx","asset/FrontendAssets/warehouse.svg","asset/FrontendAssets/destination.svg","component/showTrack.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","props","state","Fragment","className","href","Component","TableView","updateWindowDimensions","setState","width","window","innerWidth","height","innerHeight","console","log","this","styles","tableRow","fontSize","style","scope","dummy","map","list","index","onClick","handleShowTrack","_id","awbno","slice","carrier","from","to","pickup_date","extra_fields","expected_delivery_date","current_status_code","StatusBoard","selectedCard","Object","entries","statusList","key","element","minWidth","clickHandle","ShowTrack","sortedList","track","scan","sort","a","b","time","ele","status_detail","src","destination","alt","warehouse","location","App","handleEvent","data","selectedList","dataArray","filter","st","dumyArray","selected","showTrack","select","currentOrder","isShowTrack","hideTrack","hide","color","status","DEL","INT","OOD","DEX","NFI","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","ok","error","message","Promise","reject","forEach","newState","catch","errorMessage","toString","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAiBeA,G,8DAdX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,GAFE,E,qDAKf,OACA,cAAC,IAAMC,SAAP,UACI,qBAAKC,UAAU,gDAAf,SACA,mBAAGC,KAAK,OAAOD,UAAU,eAAzB,wC,GATSE,cCuENC,E,kDAlEX,aAAe,IAAD,8BACV,gBAQJC,uBAAyB,WACvB,EAAKC,SAAS,CAAEC,MAAOC,OAAOC,WAAYC,OAAQF,OAAOG,cACzDC,QAAQC,IAAI,EAAKd,QATf,EAAKA,MAAQ,GAFH,E,gEAMZe,KAAKT,2B,+BASG,IAAD,OAIDU,EAAS,CACbC,SAAU,CACRC,SAAUH,KAAKf,MAAMQ,MAAM,IAAI,OAAO,SAIxC,OACI,qBAAKN,UAAU,mBAAf,SACA,wBAAOA,UAAU,QAAjB,UACC,uBAAOA,UAAU,aAAjB,SACE,qBAAIiB,MAAOH,EAAOC,SAAlB,UACE,oBAAIG,MAAM,MAAV,eACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,qBACA,oBAAIA,MAAM,MAAV,oBACA,oBAAIA,MAAM,MAAV,yBACA,oBAAIA,MAAM,MAAV,wBACA,oBAAIA,MAAM,MAAV,iBACA,oBAAIA,MAAM,MAAV,yBAIJ,gCACKL,KAAKhB,MAAMsB,MAAMC,KAAI,SAACC,EAAKC,GAAN,OACtB,qBAAIL,MAAOH,EAAOC,SAAlB,UACI,oBAAIG,MAAM,MAAV,SAA6BI,EAAM,GAAdA,GACrB,oBAAItB,UAAU,UAAuCuB,QAAS,kBAAM,EAAK1B,MAAM2B,gBAAgBH,EAAKI,MAApG,SAA2GJ,EAAKK,OAAnFL,EAAKK,MAAMC,MAAM,EAAG,IACjD,6BAAKN,EAAKO,UACV,6BACGP,EAAKQ,KAAOR,EAAKQ,KAAM,KAE1B,6BAAKR,EAAKS,GAAKT,EAAKS,GAAI,KACxB,6BAAKT,EAAKU,cACV,6BAAKV,EAAKW,aAAcX,EAAKW,aAAaC,uBAAwB,KAClE,oBAAIjC,UAAsC,QAA3BqB,EAAKa,oBAA8B,kBAAoB,kBAAtE,SAAsH,QAA3Bb,EAAKa,oBAA4B,WAAW,iBAV1GZ,iB,GA5C1BpB,a,QCmBTiC,G,KAvBK,SAACtC,GACjBc,QAAQC,IAAIf,EAAMuC,cAElB,IAAI5B,EAAaD,OAAOC,WAExB,OACI,qBAAKR,UAAW,sBAAuBQ,EAAW,IAAI,GAAG,0BAAzD,SAGQ6B,OAAOC,QAAQzC,EAAM0C,YAAYnB,KAAI,YAAoB,IAAD,mBAAjBoB,EAAiB,KAAbC,EAAa,KACxD,OACI,qBAAezC,UAAW,aAAeH,EAAMuC,eAAiBI,EAAI,qBAAqB,IAAKvB,MAAO,CAAEyB,SAAS,SAAhH,SACJ,sBAAK1C,UAAU,wBAAwBuB,QAAS,kBAAM1B,EAAM8C,YAAYH,IAAxE,UACI,oBAAIxC,UAAU,aAAd,SAA4BwC,IAC5B,mBAAGxC,UAAU,4BAAb,SAA0CyC,QAHhCD,UCbf,MAA0B,sCCA1B,MAA0B,wCCInC1B,EAAS,CAETE,SAAUT,OAAOC,WAAW,IAAI,OAAO,QA6C9BoC,EAzCG,SAAC/C,GACfc,QAAQC,IAAIf,GACZ,IAAMgD,EAAahD,EAAMiD,MAAMC,KAAKC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,KAAOD,EAAEC,QAC9D,OAAS,8BAEDN,EAAWzB,KAAI,SAACgC,EAAK9B,GACjB,OACI,sBAAiBtB,UAAU,gCAA3B,UAEA,sBAAKA,UAAU,sCAAf,UACsB,cAApBoD,EAAIC,cAA6B,qBAAKC,IAAKC,EAAavD,UAAU,UAAUwD,IAAI,YAAYlD,MAAM,OAAOG,OAAO,SAAU,GAExH,qBAAKQ,MAAOH,EAAZ,eACA,qBAAKG,MAAOH,EAAZ,eACA,qBAAKG,MAAOH,EAAZ,eACsB,WAApBsC,EAAIC,cAAyB,qBAAKC,IAAKG,EAAWzD,UAAU,UAAUwD,IAAI,YAAYlD,MAAM,OAAOG,OAAO,SAAU,MAG1H,oBAAIT,UAAU,mBAAmBiB,MAAK,aAAG,eAAkB,UAAaH,GAAxE,SACI,qBAAKd,UAAU,mCAAf,UACKoD,EAAIM,SACL,qBAAK1D,UAAU,oBAAf,SAAoCoD,EAAID,cAdtC7B,SCoIfqC,E,kDA1Ib,WAAY9D,GAAQ,IAAD,8BACjB,cAAMA,IAiBR+D,YAAc,SAACC,GACblD,QAAQC,IAAIiD,GACZ,IAAIC,EAAgB,EAAKhE,MAAMiE,UAAUC,QAAO,SAACC,GAAD,OAAQA,EAAG/B,sBAAwB2B,KACnF,EAAKxD,SAAS,CAAC6D,UAAWJ,IAC1B,EAAKzD,SAAS,CAAC8D,SAAUN,IACzBlD,QAAQC,IAAI,EAAKd,QAvBA,EA0BnBsE,UAAY,SAAC3C,GACX,IAAI4C,EAAS,EAAKvE,MAAMoE,UAAUF,QAAO,SAACC,GAAD,OAAQA,EAAGxC,MAAQA,KAE5D,EAAKpB,SAAS,CAACiE,aAAcD,EAAO,KACpC,EAAKhE,SAAS,CAACkE,aAAa,KA9BX,EAkCnBC,UAAY,WAAS,EAAKnE,SAAS,CAACkE,aAAa,KAlC9B,EAoCnBtD,MAAQ,CACNwD,KAAM,CACJC,MAAO,SApCT,EAAK5E,MAAQ,CACXiE,UAAY,GACZG,UAAW,GACXS,OAAQ,CACNC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,GAEPb,SAAU,MACVI,aAAa,EACbD,aAAc,MAdC,E,qDA6CjB,OACA,gCACE,cAAC,EAAD,IACA,sBAAKtE,UAAU,MAAf,UACE,qBAAKA,UAAU,SAAf,SACI,cAAC,EAAD,CAAaoC,aAAcvB,KAAKf,MAAMqE,SAAUxB,YAAa9B,KAAK+C,YAAarB,WAAY1B,KAAKf,MAAM6E,WAM1G,qBAAK3E,UAAU,kBAAf,SACE,qBAAKA,UAAU,WAAf,SACIa,KAAKf,MAAMyE,aAAa1D,KAAKf,MAAMwE,aAAavB,KAChD,iCACA,mBAAG/C,UAAU,UAAUiB,MAAOJ,KAAKI,MAAMwD,KAAMlD,QAASV,KAAK2D,UAA7D,kBACA,cAAC,EAAD,CAAW1B,MAAOjC,KAAKf,MAAMwE,kBAE3B,oBAIR,qBAAKtE,UAAU,kBAAf,SACE,8BACI,cAAC,EAAD,CAAWwB,gBAAiBX,KAAKuD,UAAmBjD,MAAON,KAAKf,MAAMoE,WAAtB,iB,0CAOvC,IAAD,OAEZe,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,mBAAoB,cAAiB,qBAChEC,KAAMC,KAAKC,UAAU,CAAG,MAAS,oCAGrCC,MAAM,+EAAgFN,GACjFO,KADL,uCACU,WAAMC,GAAN,mBAAAxC,EAAA,sEACiBwC,EAASC,OAD1B,UACI7B,EADJ,OAIG4B,EAASE,GAJZ,uBAMQC,EAAS/B,GAAQA,EAAKgC,SAAYJ,EAASd,OANnD,kBAOSmB,QAAQC,OAAOH,IAPxB,OAUF/B,EAAKmC,SAAQ,SAAC/B,GACZ,GAA8B,QAA3BA,EAAG/B,oBAA+B,CACnC,IAAM+D,EAAQ,2BAAO,EAAKnG,MAAM6E,QAAlB,IAA0BC,IAAK,EAAK9E,MAAM6E,OAAOC,IAAM,IACrE,EAAKvE,SAAS,CAACsE,OAAQsB,SAGlB,GAA8B,QAA3BhC,EAAG/B,oBAA+B,CAE1C,IAAM+D,EAAQ,2BAAO,EAAKnG,MAAM6E,QAAlB,IAA0BE,IAAK,EAAK/E,MAAM6E,OAAOE,IAAM,IACrE,EAAKxE,SAAS,CAACsE,OAAQsB,SAElB,GAA8B,QAA3BhC,EAAG/B,oBAA+B,CAE1C,IAAM+D,EAAQ,2BAAO,EAAKnG,MAAM6E,QAAlB,IAA0BG,IAAK,EAAKhF,MAAM6E,OAAOG,IAAM,IACrE,EAAKzE,SAAS,CAACsE,OAAQsB,SAElB,GAA8B,QAA3BhC,EAAG/B,oBAA+B,CAC1C,IAAM+D,EAAQ,2BAAO,EAAKnG,MAAM6E,QAAlB,IAA0BI,IAAK,EAAKjF,MAAM6E,OAAOI,IAAM,IACrE,EAAK1E,SAAS,CAACsE,OAAQsB,SAElB,GAA8B,QAA3BhC,EAAG/B,oBAA+B,CAC1C,IAAM+D,EAAQ,2BAAO,EAAKnG,MAAM6E,QAAlB,IAA0BK,IAAK,EAAKlF,MAAM6E,OAAOK,IAAM,IACrE,EAAK3E,SAAS,CAACsE,OAAQsB,QAKvBnC,EAAgBD,EAAKG,QAAO,SAACC,GAAD,OAAQA,EAAG/B,sBAAwB,EAAKpC,MAAMqE,YAC9E,EAAK9D,SAAS,CAAC6D,UAAWJ,IAC1B,EAAKzD,SAAS,CAAE0D,UAAWF,IAE/BlD,QAAQC,IAAI,EAAKd,MAAM6E,QAzCjB,4CADV,uDA6CKuB,OAAM,SAAAN,GACH,EAAKvF,SAAS,CAAE8F,aAAcP,EAAMQ,aACpCzF,QAAQiF,MAAM,sBAAuBA,U,GApI/B1F,aCEHmG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.605a5573.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        return ( \r\n        <React.Fragment>\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <a href=\"#top\" className=\"navbar-brand\">Delivery DashBoard</a>\r\n            </nav>\r\n        </React.Fragment> );\r\n    }\r\n}\r\n \r\nexport default Header ;","import React, { Component } from 'react';\r\n// just use (useEffect). every change will be logged with current value\r\n// import { useEffect } from \"react\";\r\n\r\n \r\n\r\nclass TableView extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {  }\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.updateWindowDimensions()\r\n    }\r\n\r\n    updateWindowDimensions = () => {\r\n      this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n      console.log(this.state)\r\n    };\r\n\r\n\r\n    render() { \r\n\r\n\r\n\r\n      const styles = {\r\n        tableRow: {\r\n          fontSize: this.state.width<786?'12px':'14px'\r\n        }\r\n      }\r\n        // console.log(this.props.dummy)\r\n        return ( \r\n            <div className=\"table-responsive\">\r\n            <table className=\"table\">\r\n             <thead className=\"thead-dark\">\r\n               <tr style={styles.tableRow}>\r\n                 <th scope=\"col\">#</th>\r\n                 <th scope=\"col\">Awbno</th>\r\n                 <th scope=\"col\">Carrier</th>\r\n                 <th scope=\"col\">Source</th>\r\n                 <th scope=\"col\">Destination</th>\r\n                 <th scope=\"col\">Start Date</th>\r\n                 <th scope=\"col\">ETD</th>\r\n                 <th scope=\"col\">Status</th>\r\n\r\n               </tr>\r\n             </thead>\r\n             <tbody>\r\n                 {this.props.dummy.map((list,index) => \r\n                 <tr style={styles.tableRow} key={index} >\r\n                     <th scope=\"row\" key={index}>{index+1}</th>\r\n                     <td className=\"pointer\" key={list.awbno.slice(1, 4)} onClick={() => this.props.handleShowTrack(list._id)}>{list.awbno}</td>\r\n                     <td>{list.carrier}</td>\r\n                     <td>\r\n                       {list.from ? list.from: \"\"}  \r\n                     </td>\r\n                     <td>{list.to ? list.to: \"\"}</td>\r\n                     <td>{list.pickup_date}</td>\r\n                     <td>{list.extra_fields? list.extra_fields.expected_delivery_date: \"\"}</td>\r\n                     <td className={list.current_status_code==='DEL' ? 'btn btn-success' : 'btn btn-warning'} >{list.current_status_code==='DEL'?'DELIVERD':\"In-TRANSIT\"}</td>\r\n                 </tr>\r\n                         )\r\n                 }\r\n               \r\n             </tbody>\r\n           </table>\r\n\r\n       </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default TableView;","import './style.css'\r\n\r\nconst StatusBoard = (props) => {\r\n    console.log(props.selectedCard)\r\n    // Object.keys(props.statusList).map(element => { console.log(element)})\r\n    let innerWidth = window.innerWidth\r\n\r\n    return (     \r\n        <div className={\"d-flex p-2 scroll \" +(innerWidth<768?'':'justify-content-center')}>\r\n\r\n           {\r\n                Object.entries(props.statusList).map(([key,element]) => {\r\n                return (\r\n                    <div key={key} className={'card mx-2' + (props.selectedCard === key?'text-white bg-info':'')} style={{ minWidth:'100px'}}>\r\n                <div className=\"card-body p-1 pointer\" onClick={() => props.clickHandle(key)}>\r\n                    <h4 className=\"card-title\">{key}</h4>\r\n                    <p className=\"text-right display-4 mb-1\">{element}</p>\r\n                  </div>\r\n                  </div>)\r\n                })\r\n            }\r\n\r\n        </div> );\r\n}\r\n \r\nexport default StatusBoard;","export default __webpack_public_path__ + \"static/media/warehouse.147c9c0b.svg\";","export default __webpack_public_path__ + \"static/media/destination.5336278d.svg\";","import warehouse from './../asset/FrontendAssets/warehouse.svg';\r\nimport destination from  './../asset/FrontendAssets/destination.svg';\r\nimport './style.css';\r\n\r\nconst styles = {\r\n\r\n      fontSize: window.innerWidth<786?'12px':'14px'\r\n\r\n  }\r\n\r\nconst ShowTrack = (props) => {\r\n    console.log(props)\r\n    const sortedList = props.track.scan.sort((a, b) => a.time - b.time);\r\n    return ( <div>\r\n        {\r\n            sortedList.map((ele, index) => {\r\n                return(\r\n                    <div key={index} className=\"d-flex justify-content-center\">\r\n            \r\n                    <div className=\"d-flex flex-column text-center w-25\">\r\n                    { ele.status_detail===\"DELIVERED\"? <img src={destination} className=\"mx-auto\" alt=\"warehouse\" width=\"26px\" height=\"26px\" />:\"\" }\r\n\r\n                        <div style={styles}>|</div>\r\n                        <div style={styles}>|</div>\r\n                        <div style={styles}>|</div>\r\n                        { ele.status_detail===\"BOOKED\"?<img src={warehouse} className=\"mx-auto\" alt=\"warehouse\" width=\"26px\" height=\"26px\" />:\"\"}\r\n        \r\n                    </div>\r\n                    <ul className=\"list-group w-100\" style={{\"justifyContent\": \"center\", ...styles}}>\r\n                        <li  className=\"list-group-item p-1 align-middle\">\r\n                            {ele.location}\r\n                            <div className=\"small text-center\">{ele.time}</div>\r\n                            </li>\r\n                         {/* <li class=\"list-group-item\">Dapibus ac facilisis in</li>\r\n                        <li class=\"list-group-item\">Morbi leo risus</li>\r\n                        <li class=\"list-group-item\">Porta ac consectetur ac</li>\r\n                        <li class=\"list-group-item\">Vestibulum at eros</li>  */}\r\n                    </ul>\r\n                    </div>\r\n                )\r\n            })\r\n        }\r\n\r\n\r\n            \r\n      \r\n        \r\n        \r\n        </div> );\r\n}\r\n \r\nexport default ShowTrack;","import './App.css';\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport  Header from './component/header';\nimport TableView from './component/table'; \nimport StatusBoard from './component/statusBoard';\nimport ShowTrack from './component/showTrack';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      dataArray : [],\n      dumyArray: [],\n      status: {\n        DEL: 0,\n        INT: 0,\n        OOD: 0,\n        DEX: 0,\n        NFI: 0\n      },\n      selected: \"DEL\",\n      isShowTrack: false,\n      currentOrder: null\n     }\n  }\n\n  handleEvent = (data) => {\n    console.log(data)\n    let selectedList  = this.state.dataArray.filter((st) => st.current_status_code === data)\n    this.setState({dumyArray: selectedList})\n    this.setState({selected: data})\n    console.log(this.state)\n  }\n\n  showTrack = (_id) => {\n    let select = this.state.dumyArray.filter((st) => st._id === _id)\n\n    this.setState({currentOrder: select[0]})\n    this.setState({isShowTrack: true})\n    // console.log(this.state)\n  }\n\n  hideTrack = () => {  this.setState({isShowTrack: false})}\n\n  style = {\n    hide: {\n      color: 'blue'\n    }\n  }\n\n\n  render() { \n    \n    return (\n    <div>\n      <Header />\n      <div className=\"row\">\n        <div className=\"col-12\">\n            <StatusBoard selectedCard={this.state.selected} clickHandle={this.handleEvent} statusList={this.state.status}/> \n\n\n\n        </div>\n\n        <div className=\"col-12 col-sm-4\">\n          <div className=\"card p-2\">\n            { this.state.isShowTrack&&this.state.currentOrder.scan? \n              <span>\n              <p className=\"pointer\" style={this.style.hide} onClick={this.hideTrack}>Hide</p>\n              <ShowTrack track={this.state.currentOrder} />\n              </span> \n              : \"Click to show\"\n            }\n          </div>\n        </div>\n        <div className=\"col-12 col-sm-8\">\n          <div>\n              <TableView handleShowTrack={this.showTrack} key='1' dummy={this.state.dumyArray}/>\n          </div>\n        </div>\n      </div>\n    </div> );\n  }\n\n  componentDidMount() {\n    // POST request using fetch with error handling\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json', 'Authorization': \"Bearer tTU3gFVUdP\" },\n        body: JSON.stringify({ \t\"email\": \"suyashshrivastava651@gmail.com\"})\n    };\n\n    fetch('https://f0ztti2nsk.execute-api.ap-south-1.amazonaws.com/v1/consignment/fetch', requestOptions)\n        .then(async response => {\n            const data = await response.json();\n\n            // check for error response\n            if (!response.ok) {\n                // get error message from body or default to response status\n                const error = (data && data.message) || response.status;\n                return Promise.reject(error);\n            }\n\n            data.forEach((st) => {\n              if(st.current_status_code === \"DEL\") {\n                const newState = {...this.state.status, DEL: this.state.status.DEL + 1}\n                this.setState({status: newState})\n                // console.log(st)\n\n              } else if(st.current_status_code === \"INT\") {\n                // this.setState({DEL: this.state.status.DEL+1})\n                const newState = {...this.state.status, INT: this.state.status.INT + 1}\n                this.setState({status: newState})\n\n              } else if(st.current_status_code === \"OOD\") {\n                // this.setState({DEL: this.state.status.DEL+1})\n                const newState = {...this.state.status, OOD: this.state.status.OOD + 1}\n                this.setState({status: newState})\n\n              } else if(st.current_status_code === \"DEX\") {\n                const newState = {...this.state.status, DEX: this.state.status.DEX + 1}\n                this.setState({status: newState})\n\n              } else if(st.current_status_code === \"NFI\") {\n                const newState = {...this.state.status, NFI: this.state.status.NFI + 1}\n                this.setState({status: newState})\n\n              } \n            })\n\n            let selectedList  = data.filter((st) => st.current_status_code === this.state.selected)\n            this.setState({dumyArray: selectedList})\n            this.setState({ dataArray: data })\n            // console.log(data)\n        console.log(this.state.status)\n\n        })\n        .catch(error => {\n            this.setState({ errorMessage: error.toString() });\n            console.error('There was an error!', error);\n        });\n\n      }\n}\n \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}